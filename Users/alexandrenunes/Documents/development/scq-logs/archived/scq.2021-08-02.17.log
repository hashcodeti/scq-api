[2021-08-02 23:28:06] - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'bluebudy'
    |  |     |  |  |  \-[IDENT] Node: 'SCQ'
    |  |     |  |  \-[IDENT] Node: 'domain'
    |  |     |  \-[IDENT] Node: 'Etapa'
    |  |     \-[ALIAS] Node: 'e'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'e'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'e'
          |  |  \-[IDENT] Node: 'processo'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'processoId'

[2021-08-02 23:28:06] - select << begin [level=1, statement=select]
[2021-08-02 23:28:06] - FromClause{level=1} : com.bluebudy.SCQ.domain.Etapa (e) -> etapa0_
[2021-08-02 23:28:06] - Resolved : e -> etapa0_.id
[2021-08-02 23:28:06] - Resolved : e -> etapa0_.id
[2021-08-02 23:28:06] - getDataType() : processo -> org.hibernate.type.ManyToOneType(com.bluebudy.SCQ.domain.Processo)
[2021-08-02 23:28:06] - dereferenceShortcut() : property id in com.bluebudy.SCQ.domain.Etapa does not require a join.
[2021-08-02 23:28:06] - Unresolved property path is now 'processo.id'
[2021-08-02 23:28:06] - Resolved : e.processo -> etapa0_.processo_id
[2021-08-02 23:28:06] - getDataType() : processo.id -> org.hibernate.type.LongType@13f1e97b
[2021-08-02 23:28:06] - Resolved : e.processo.id -> etapa0_.processo_id
[2021-08-02 23:28:06] - select : finishing up [level=1, statement=select]
[2021-08-02 23:28:06] - processQuery() :  ( SELECT ( {select clause} etapa0_.id ) ( FromClause{level=1} etapa etapa0_ ) ( WHERE ( = ( etapa0_.processo_id ( etapa0_.processo_id etapa0_.id processo ) id ) ? ) ) )
[2021-08-02 23:28:06] - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Etapa): [etapa]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.bluebudy.SCQ.domain.Etapa)
    |  | referencedTables: null
    |  | originalText: e
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.bluebudy.SCQ.domain.Etapa)
          | referencedTables: null
          | path: e.processo.id
          | originalPropertyName: id
          |  +-DotNode
          |  | persister: SingleTableEntityPersister(com.bluebudy.SCQ.domain.Etapa)
          |  | referencedTables: [etapa]
          |  | path: e.processo
          |  | originalPropertyName: processo
          |  |  +-IdentNode
          |  |  | persister: SingleTableEntityPersister(com.bluebudy.SCQ.domain.Etapa)
          |  |  | referencedTables: null
          |  |  | originalText: e
          |  |  \-IdentNode
          |  |    persister: null
          |  |    referencedTables: null
          |  |    originalText: processo
          |  \-IdentNode
          |    persister: null
          |    referencedTables: null
          |    originalText: id
          \-ParameterNode

[2021-08-02 23:28:06] - Using FROM fragment [etapa etapa0_]
[2021-08-02 23:28:06] - select >> end [level=1, statement=select]
[2021-08-02 23:28:06] - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (etapa)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'etapa0_.id as id1_4_' {alias=e, className=com.bluebudy.SCQ.domain.Etapa, tableAlias=etapa0_}
    |  \-[SQL_TOKEN] SqlFragment: 'etapa0_.nome as nome2_4_, etapa0_.posicao as posicao3_4_, etapa0_.processo_id as processo5_4_, etapa0_.volume as volume4_4_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[etapa0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'etapa etapa0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=etapa,tableAlias=etapa0_,origin=null,columns={,className=com.bluebudy.SCQ.domain.Etapa}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'etapa0_.processo_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=processo.id,path=e.processo.id,tableAlias=etapa0_,className=com.bluebudy.SCQ.domain.Etapa,classAlias=e}
          |  +-[DOT] DotNode: 'etapa0_.processo_id' {propertyName=id,dereferenceType=UNKNOWN,getPropertyPath=processo.id,path=e.processo,tableAlias=etapa0_,className=com.bluebudy.SCQ.domain.Etapa,classAlias=e}
          |  |  +-[ALIAS_REF] IdentNode: 'etapa0_.id' {alias=e, className=com.bluebudy.SCQ.domain.Etapa, tableAlias=etapa0_}
          |  |  \-[IDENT] IdentNode: 'processo' {originalText=processo}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=processoId, expectedType=org.hibernate.type.LongType@13f1e97b}

[2021-08-02 23:28:06] - throwQueryException() : no errors
[2021-08-02 23:28:06] - HQL: SELECT e FROM com.bluebudy.SCQ.domain.Etapa e WHERE e.processo.id = :processoId
[2021-08-02 23:28:06] - SQL: select etapa0_.id as id1_4_, etapa0_.nome as nome2_4_, etapa0_.posicao as posicao3_4_, etapa0_.processo_id as processo5_4_, etapa0_.volume as volume4_4_ from etapa etapa0_ where etapa0_.processo_id=?
[2021-08-02 23:28:06] - throwQueryException() : no errors
[2021-08-02 23:28:06] - Finished creation of repository instance for com.bluebudy.SCQ.repository.EtapaRepository.
[2021-08-02 23:28:06] - Creating shared instance of singleton bean 'controleRepositoryImpl'
[2021-08-02 23:28:06] - Not strongly caching class [com.bluebudy.SCQ.repository.ControleRepositoryImpl] because it is not cache-safe
[2021-08-02 23:28:06] - Creating shared instance of singleton bean 'controleRepository'
[2021-08-02 23:28:06] - Creating new EntityManager for shared EntityManager invocation
[2021-08-02 23:28:06] - Initializing repository instance for com.bluebudy.SCQ.repository.ControleRepository…
[2021-08-02 23:28:06] - Creating new EntityManager for shared EntityManager invocation
[2021-08-02 23:28:06] - Creating new EntityManager for shared EntityManager invocation
[2021-08-02 23:28:06] - Finished creation of repository instance for com.bluebudy.SCQ.repository.ControleRepository.
[2021-08-02 23:28:06] - Creating shared instance of singleton bean 'notificacaoRepositoryImpl'
[2021-08-02 23:28:06] - Not strongly caching class [com.bluebudy.SCQ.repository.NotificacaoRepositoryImpl] because it is not cache-safe
[2021-08-02 23:28:06] - Creating shared instance of singleton bean 'notificacaoRepository'
[2021-08-02 23:28:06] - Creating new EntityManager for shared EntityManager invocation
[2021-08-02 23:28:06] - Not strongly caching class [com.bluebudy.SCQ.domain.Notificacao] because it is not cache-safe
[2021-08-02 23:28:06] - Initializing repository instance for com.bluebudy.SCQ.repository.NotificacaoRepository…
[2021-08-02 23:28:06] - Creating new EntityManager for shared EntityManager invocation
[2021-08-02 23:28:06] - Creating new EntityManager for shared EntityManager invocation
[2021-08-02 23:28:06] - Finished creation of repository instance for com.bluebudy.SCQ.repository.NotificacaoRepository.
[2021-08-02 23:28:06] - Creating shared instance of singleton bean 'processoRepository'
[2021-08-02 23:28:06] - Creating new EntityManager for shared EntityManager invocation
[2021-08-02 23:28:06] - Initializing repository instance for com.bluebudy.SCQ.repository.ProcessoRepository…
[2021-08-02 23:28:06] - Creating new EntityManager for shared EntityManager invocation
[2021-08-02 23:28:06] - Creating new EntityManager for shared EntityManager invocation
[2021-08-02 23:28:06] - Finished creation of repository instance for com.bluebudy.SCQ.repository.ProcessoRepository.
[2021-08-02 23:28:06] - Creating shared instance of singleton bean 'dependenceAnaliseGenerator'
[2021-08-02 23:28:06] - Not strongly caching class [com.bluebudy.SCQ.services.DependenceAnaliseGenerator] because it is not cache-safe
[2021-08-02 23:28:06] - Caching method [CacheKey[com.bluebudy.SCQ.controllers.AnaliseController; void com.bluebudy.SCQ.controllers.AnaliseController.deleteAnalise(java.lang.Long)]] with attributes [ROLE_ADMIN]
[2021-08-02 23:28:06] - Creating shared instance of singleton bean 'methodSecurityInterceptor'
[2021-08-02 23:28:06] - Autowiring by type from bean name 'methodSecurityInterceptor' via factory method to bean named 'methodSecurityMetadataSource'
[2021-08-02 23:28:06] - Validated configuration attributes
[2021-08-02 23:28:06] - Creating shared instance of singleton bean 'authenticationController'
[2021-08-02 23:28:06] - Not strongly caching class [com.bluebudy.SCQ.controllers.AuthenticationController] because it is not cache-safe
[2021-08-02 23:28:06] - Creating shared instance of singleton bean 'authenticationManager'
[2021-08-02 23:28:06] - Creating shared instance of singleton bean 'calculator'
[2021-08-02 23:28:06] - Not strongly caching class [com.bluebudy.SCQ.controllers.Calculator] because it is not cache-safe
[2021-08-02 23:28:06] - Creating shared instance of singleton bean 'calculadora'
[2021-08-02 23:28:06] - Not strongly caching class [com.bluebudy.SCQ.domain.Calculadora] because it is not cache-safe
[2021-08-02 23:28:06] - Creating shared instance of singleton bean 'constantsControllers'
[2021-08-02 23:28:06] - Not strongly caching class [com.bluebudy.SCQ.controllers.ConstantsControllers] because it is not cache-safe
[2021-08-02 23:28:06] - Creating shared instance of singleton bean 'etapaController'
[2021-08-02 23:28:06] - Autowiring by type from bean name 'etapaController' via constructor to bean named 'etapaRepository'
[2021-08-02 23:28:06] - Not strongly caching class [com.bluebudy.SCQ.controllers.EtapaController] because it is not cache-safe
[2021-08-02 23:28:06] - Creating shared instance of singleton bean 'controleService'
